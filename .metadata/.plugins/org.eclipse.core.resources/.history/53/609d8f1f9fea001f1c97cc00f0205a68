package com.cart.api.service;

import java.util.ArrayList;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.cart.api.dto.Product;
import com.cart.api.entity.Cart;
import com.cart.api.entity.CartItem;
import com.cart.api.repository.CartRepository;

@Service
public class CartService {

	@Autowired
	private CartRepository cartRepository;
	
	@Autowired
	private RestTemplate restTemplate;
	
	
	/**
     * Get the cart for a specific user. If the cart doesn't exist, create a new one.
     */
	
	public Cart getOrCreateCart(Long userId) {
		
		return cartRepository.findByUserId(userId).orElseGet(() -> {
			Cart newCart = new Cart();
			newCart.setUserId(userId);
			newCart.setCartItems(new ArrayList<>());
			return cartRepository.save(newCart);
		});
		
	}
	
	
	public Cart addProductToCart(Long userId, Long productId, int quantity) {
		Cart cart = getOrCreateCart(userId);
		
		Product product = restTemplate.getForObject("http://localhost:8080/product/byid/"+productId, Product.class);
		
		
		Optional<CartItem> existingItem = cart.getCartItems().stream()
				.filter(item -> item.getProductId()== productId).findFirst();
		
		  if (existingItem.isPresent()) {
	            existingItem.get().setQuantity(existingItem.get().getQuantity() + quantity);
	        } else {
	            CartItem newItem = new CartItem();
	            newItem.setProductId(productId);
	            newItem.setQuantity(quantity);
	            cart.getCartItems().add(newItem);
	        }

	        return cartRepository.save(cart);
		
	}
	
	public Cart removeCartProduct(Long userId,Long productId) {
		
		Cart cart = getOrCreateCart(userId);
		cart.getCartItems().removeIf(item -> item.getProductId()==productId);
	}
}
