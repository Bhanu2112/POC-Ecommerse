package com.poc.product.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.poc.product.entity.Product;
import com.poc.product.exception.ProductNotFound;
import com.poc.product.repository.ProductRepository;

@Service
public class ProductService {
	
	
	@Autowired
	private ProductRepository productRepository;
	
	
	   public Product addProduct(Product product) {
	        return productRepository.save(product);
	   }
	   
	   public void softDeleteProduct(Long productId) {
	        Product product = productRepository.findById(productId)
	                .orElseThrow(() -> new RuntimeException("Product not found"));
	        product.setDeleted(true);
	        productRepository.save(product);
	    }
	   
	   
	   public Product updateProductPrice(Long productId, Double newPrice) {
	        Product product = productRepository.findById(productId)
	                .orElseThrow(() -> new RuntimeException("Product not found"));
	        product.setPrice(newPrice);
	        return productRepository.save(product);
	    }
	   
	   public Product getProductByName(String name) {
		   return productRepository.findByName(name)
				   .orElseThrow(() -> new ProductNotFound("Product with name "+name+" not dound"));
	   }
	   
	   public List<Product> getProductsByCategory(String category){
		   return productRepository.findByCategory(category);
	   }
	   
	   public List<Product> getProductsSortedByPriceAsc() {
	        return productRepository.findByPriceAsc();
	    }

	    public List<Product> getProductsSortedByPriceDesc(String orderBy) {
	        return productRepository.findByPriceDesc(orderBy);
	    }
	   

}
